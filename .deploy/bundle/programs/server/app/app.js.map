{"version":3,"sources":["meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/template.js","meteor://ðŸ’»app/imports/videochat/server.js","meteor://ðŸ’»app/server/main.js"],"names":["UserData","Meteor","Collection","renderCallTemplate","template","Session","set","self","console","log","autorun","subscribe","newIncomingCall","VideoCallServices","VideoChatCallLog","findOne","status","callee_id","userId","message","caller","caller_id","callee","timestamp","Date","_id","startRingtone","_loadRTCConnection","_setUpCalleeEvents","_setUpMixedEvents","update","$set","conn_dt","getTime","onReceivePhoneCall","answeredCall","stopRingtone","ignoredCall","get","onCallIgnored","cancelledCall","callTerminated","iceFailed","peerConnection","addStream","localStream","callFailed","connection","_stream","on","currentPhoneCall","JSON","parse","msg","collection","fields","undefined","ice_callee","ice","addIceCandidate","RTCIceCandidate","err","SDP_callee","setRemoteDescription","SessionDescription","_createLocalOffer","_setUpCallerEvents","SDP_caller","createAnswer","answer","setLocalDescription","stringify","ice_caller","allow","id","originalEntry","fieldBeingUpdated","query","insert","entry","user","calleeInCall","$in","callMadeButDesposedOf","Error","users","find","observe","removed","$and","$or","forEach","doc","startup","methods","username","time","userData","password","UserPresence","onUserOnline","onUserIdle","onUserOffline"],"mappings":"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","file":"/app.js","sourcesContent":["UserData = new Meteor.Collection(\"UserData\");\n","renderCallTemplate = function(template) {\n    Session.set(\"currentPhoneCall\", null);\n    Session.set(\"phoneIsRinging\", false);\n    Session.set(\"remoteIceCandidates\", []);\n    Session.set(\"callState\", null);\n    Session.set(\"\");\n    if (!template) var self = this;\n    else var self = template;\n    /*\n     *   Autorun is used to detect changes in the publication.\n     *   The functionality triggered by changes is used to devise as to\n     *   whether the phone is ringing.\n     *\n     */\n    console.log(\"created\");\n    self.autorun(function() {\n        console.log(\"call autorun\");\n        self.subscribe(\"VideoCallChatLog\");\n        let newIncomingCall = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            status: \"C\",\n            callee_id: Meteor.userId()\n        });\n        if (newIncomingCall) {\n            Session.set(\"localIceCandidates\", []);\n            Session.set(\"addedIceCandidates\", null)\n            console.log(\"incoming call\")\n            Session.set(\"callState\", {\n                message: \"Received Call\",\n                status: \"R\",\n                caller: newIncomingCall.caller_id,\n                callee: newIncomingCall.callee_id,\n                timestamp: new Date()\n            });\n            Session.set(\"currentPhoneCall\", newIncomingCall._id);\n            Meteor.VideoCallServices.startRingtone();\n            Meteor.VideoCallServices._loadRTCConnection();\n            Meteor.VideoCallServices._setUpCalleeEvents();\n            Meteor.VideoCallServices._setUpMixedEvents();\n            Meteor.VideoCallServices.VideoChatCallLog.update({\n                _id: newIncomingCall._id\n            }, {\n                $set: {\n                    status: \"R\",\n                    conn_dt: new Date().getTime()\n                }\n            });\n            Meteor.VideoCallServices.onReceivePhoneCall();\n        }\n        let answeredCall = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            status: \"A\",\n            callee_id: Meteor.userId()\n        });\n        if (answeredCall) {\n            Session.set(\"inCall\");\n            Meteor.VideoCallServices.stopRingtone();\n            Session.set(\"callState\", {\n                message: \"Answered\",\n                status: \"A\",\n                caller: answeredCall.caller_id,\n                callee: answeredCall.callee_id,\n                timestamp: new Date()\n            });\n        }\n        let ignoredCall = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            _id: Session.get(\"currentPhoneCall\"),\n            caller_id: Meteor.userId(),\n            status: \"IG\"\n        });\n        if (ignoredCall) {\n            Meteor.VideoCallServices.onCallIgnored();\n            Session.set(\"callState\", {\n                message: \"Ignored\",\n                status: \"IG\",\n\n                caller: ignoredCall.caller_id,\n                callee: ignoredCall.callee_id,\n                timestamp: new Date()\n            })\n        }\n\n        let cancelledCall = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            _id: Session.get(\"currentPhoneCall\"),\n            status: \"D\"\n        })\n        if (cancelledCall) {\n            Meteor.VideoCallServices.callTerminated();\n            Session.get(\"callState\", {\n                message: \"Cancelled\",\n                status: \"D\",\n                caller: cancelledCall.caller_id,\n                callee: cancelledCall.callee_id,\n                timestamp: new Date()\n            })\n        }\n        let iceFailed = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            _id: Session.get(\"currentPhoneCall\"),\n            status: \"IF\",\n\n            callee_id: Meteor.userId()\n        })\n        if (iceFailed) {\n            Meteor.VideoCallServices._loadRTCConnection();\n            Meteor.VideoCallServices._setUpCalleeEvents();\n            Meteor.VideoCallServices._setUpMixedEvents();\n            Meteor.VideoCallServices.peerConnection.addStream(Meteor.localStream);\n            Meteor.VideoCallServices.VideoChatCallLog.update({\n                _id: Session.get(\"currentPhoneCall\")\n            }, {\n                $set: {\n                    status: \"IRS\"\n                }\n            })\n            Session.set(\"callState\", {\n                message: \"Ice failed, retrying connection\",\n                status: \"IRS\",\n                caller: iceFailed.caller_id,\n                callee: iceFailed.callee_id,\n                timestamp: new Date()\n            })\n        }\n        let callFailed = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n            _id: Session.get(\"currentPhoneCall\"),\n            status: \"F\"\n        })\n        if (callFailed) {\n            Meteor.VideoCallServices.callTerminated();\n            Session.set(\"callState\", {\n                message: \"Call failed\",\n                status: \"F\",\n                caller: iceFailed.caller_id,\n                callee: iceFailed.callee_id,\n\n                timestamp: new Date()\n            })\n        }\n        if (Session.get(\"currentPhoneCall\") == null)\n            Meteor.VideoCallServices.callTerminated();\n    });\n\n    /*\n     *   Read the DDP stream directly to detect changes in state.\n     *\n     */\n    Meteor.connection._stream.on('message', function(message) {\n        if (Session.get(\"currentPhoneCall\")) {\n            let currentPhoneCall = Meteor.VideoCallServices.VideoChatCallLog.findOne({\n                _id: Session.get(\"currentPhoneCall\")\n            });\n            let caller = currentPhoneCall.caller_id == Meteor.userId();\n            message = JSON.parse(message);\n            if (message.msg == \"changed\" && message.collection == \"VideoChatCallLog\" && message.fields != undefined) {\n                if (caller) {\n                    console.log(\"caller\", message);\n\n                    if (message.fields.ice_callee != undefined) {\n                        console.log(\"ice callee\", message.fields);\n                        let ice = message.fields.ice_callee;\n\n\n\n                        Meteor.VideoCallServices.peerConnection.addIceCandidate(\n\n                            new RTCIceCandidate(JSON.parse(ice)),\n                            function() {\n\n                            },\n                            function(err) {\n                                console.log(err);\n                            });\n\n\n                    }\n\n                    if (message.fields.SDP_callee != undefined) {\n                        console.log(\"sdp_callee\");\n                        Meteor.VideoCallServices.peerConnection.setRemoteDescription(new SessionDescription(\n                            JSON.parse(message.fields.SDP_callee)\n                        ), function() {}, function() {})\n\n                    }\n                    if (message.fields.status != undefined) {\n                        if (message.fields.status == currentPhoneCall.callee_id)\n                            Meteor.VideoCallServices.callTerminated();\n                        if (message.fields.status == \"CAN\")\n                            Meteor.VideoCallServices.callTerminated();\n                        if (message.fields.status == \"A\") {\n                            console.log(\"EY\");\n                            Meteor.VideoCallServices._createLocalOffer();\n                            Meteor.VideoCallServices._setUpCallerEvents();\n                            Meteor.VideoCallServices._setUpMixedEvents();\n                        }\n                        if (message.fields.status == \"IRS\") {\n                            Meteor.VideoCallServices._loadRTCConnection();\n                            Meteor.VideoCallServices._createLocalOffer();\n                            Meteor.VideoCallServices._setUpCallerEvents();\n                            Meteor.VideoCallServices._setUpMixedEvents();\n                            Meteor.VideoCallServices.peerConnection.addStream(Meteor.localStream);\n                        }\n                    }\n                }\n                else {\n\n                    if (message.fields.status != undefined)\n                        if (message.fields.status == currentPhoneCall.caller_id)\n                            Meteor.VideoCallServices.callTerminated();\n                    if (message.fields.SDP_caller != undefined) {\n                        Meteor.VideoCallServices.peerConnection.setRemoteDescription(new SessionDescription(\n                            JSON.parse(message.fields.SDP_caller)\n                        ), () => {\n                            Meteor.VideoCallServices.peerConnection.createAnswer((answer) => {\n                                Meteor.VideoCallServices.peerConnection.setLocalDescription(answer);\n                                Meteor.VideoCallServices.VideoChatCallLog.update({\n                                    _id: Session.get(\"currentPhoneCall\")\n                                }, {\n                                    $set: {\n                                        SDP_callee: JSON.stringify(answer)\n                                    }\n                                });\n                            }, function() {})\n\n                        }, function() {})\n\n                    }\n\n                    if (message.fields.ice_caller != undefined) {\n                        const ice = message.fields.ice_caller;\n                        console.log(\"loadingIce\", message);\n                        Meteor.VideoCallServices.peerConnection.addIceCandidate(\n                            new RTCIceCandidate(JSON.parse(ice)), function(){}, function(err){console.log(err);});\n\n                    }\n                }\n            }\n        }\n    });\n\n}\n","  VideoCallServices = {\n        VideoChatCallLog: new Meteor.Collection(\"VideoChatCallLog\")\n    };\n    /*\n     *   Allow users to update the connection data collection from the client side\n     *   In a stable release there will be greater control of the people who can edit this. \n     *\n     */\n    VideoCallServices.VideoChatCallLog.allow({\n        update: function(id, originalEntry, fieldBeingUpdated, query) {\n            return Meteor.userId() == originalEntry.callee_id || Meteor.userId() == originalEntry.caller_id;\n\n        },\n        insert: function(id, entry) {\n            if (Meteor.user()) {\n                let callee = entry.callee_id;\n                let calleeInCall = VideoCallServices.VideoChatCallLog.findOne({\n                    callee_id: callee,\n                    status: {\n                        $in: [\"R\", \"A\", \"CON\"]\n                    }\n                })\n                let callMadeButDesposedOf = VideoCallServices.VideoChatCallLog.findOne({\n                    callee_id: callee,\n                    status: \"C\"\n                })\n                if (callMadeButDesposedOf) {\n                    VideoCallServices.VideoChatCallLog.update({\n                        _id: callMadeButDesposedOf._id\n                    }, {\n                        $set: {\n                            status: \"F\"\n                        }\n                    })\n                }\n                if (calleeInCall) {\n                    throw new Meteor.Error(500, \"Callee is currently in a call\");\n                    return false;\n                }\n                else return true;\n            }\n            else return false;\n        }\n    })\n    Meteor.users.find({\n        \"status.online\": true\n    }).observe({\n        removed: function(user) {\n            VideoCallServices.VideoChatCallLog.find({\n                $and: [{\n                    $or: [{\n                        caller_id: user._id\n                    }, {\n                        callee_id: user._id\n                    }]\n                }, {\n                    $or: [{\n                        status: \"R\"\n                    }, {\n                        status: \"IRS\"\n                    }, {\n                        status: \"A\"\n                    }]\n                }]\n            }).forEach(function(doc) {\n                VideoCallServices.VideoChatCallLog.update({\n                    _id: doc._id\n                }, {\n                    $set: {\n                        status: \"F\"\n                    }\n                })\n            });\n            VideoCallServices.VideoChatCallLog.find({\n                $and: [{\n                    $or: [{\n                        caller_id: user._id\n                    }, {\n                        callee_id: user._id\n                    }],\n                    status: \"CON\"\n                }]\n            }).forEach(function(doc) {\n                VideoCallServices.VideoChatCallLog.update({\n                    _id: doc._id\n                }, {\n                    $set: {\n                        status: \"FIN\"\n                    }\n                })\n            })\n        }\n    });\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/videochat/server.js';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\n\n  Meteor.methods({\n    \"login_record\" (username) {\n      UserData.insert({\n        username,\n        time: new Date(),\n        userData: Meteor.users.findOne({\n          username\n        }, {\n          password: 0\n        })\n      })\n    }\n  })\n\n\nUserPresence.onUserOnline(function(userId){\n      Meteor.users.update({_id:userId}, {$set:{status:\"online\"}});\n      console.log(userId + ' online...');\n});\n\nUserPresence.onUserIdle(function(userId){\n  Meteor.users.update({_id:userId}, {$set:{status:\"idle\"}});\n  console.log(userId + ' idle...');\n});\n\nUserPresence.onUserOffline(function(userId){\n  Meteor.users.update({_id:userId}, {$set:{status:\"offline\"}});\n  console.log(userId + ' offline...');\n});\n"]}